import Head from 'next/head'
// import Image from 'next/image'
// import { Inter } from 'next/font/google'
// import Header from '@/copmonent/user/header'
// import Sidebar from '@/copmonent/user/sidebar'
// import Footer from '@/copmonent/user/footer'
// import Rightsidbar from '@/copmonent/user/right-sidebar'
// import Skin from '@/copmonent/user/skin'
import { useFormik } from 'formik';
import * as Yup from 'yup';
import { useDispatch, useSelector } from 'react-redux';
import { login } from '@/features/auth/authSlice';
import { useEffect } from 'react';
import { useRouter } from "next/router";

import { ToastContainer, toast } from 'react-toastify';

// Import toastify css file
import 'react-toastify/dist/ReactToastify.css';

// toast-configuration method,
// it is compulsory method.
// toast.configure()

// const inter = Inter({ subsets: ['latin'] })

export default function Login() {


    const dispach = useDispatch();
    const router = useRouter();

    let schema = Yup.object().shape({

        email: Yup.string().email("Email should be valid").required("Email is required"),
        password: Yup.string().required("Password is required"),

    });

    const formik = useFormik({
        initialValues: {
            email: '',
            password: '',
        },
        validationSchema: schema,
        onSubmit: (values) => {
            dispach(login(values))



            // alert(JSON.stringify(message, null, 2));

        },

    });


    const { user, isLoading, isError, isSuccess, message } = useSelector(
        (state) => state.auth
    );

    useEffect(() => {
        if (isError === true) {
            toast.error(message)
        } else if (isSuccess === true) {
            toast.success("Wellcome")
        }
    }, [isError, isSuccess])



    useEffect(() => {
        if (user || isSuccess) {
            router.push('/')
        } else {
            router.push('#')
        }

    }, [user, isLoading, isError, isSuccess]
    );


    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <ToastContainer
                position="top-right"
                autoClose={5000}
                hideProgressBar={false}
                newestOnTop={false}
                closeOnClick
                rtl={false}
                pauseOnFocusLoss={false}
                draggable
                pauseOnHover
                theme="dark"
            />
            <main>
                <div className="container-scroller">
                    <div className="container-fluid page-body-wrapper full-page-wrapper">
                        <div className="content-wrapper d-flex align-items-center auth px-0">
                            <div className="row w-100 mx-0">
                                <div className="col-lg-4 mx-auto">
                                    <div className="auth-form-light text-left py-5 px-4 px-sm-5">
                                        <div className="brand-logo">
                                            <img src="../../images/logo.svg" alt="logo" />
                                        </div>


                                        <h4>Hello! let's get started</h4>

                                        <h6 className="font-weight-light">Sign in to continue.</h6>
                                        <form onSubmit={formik.handleSubmit} className="pt-3">
                                            <div className="form-group">
                                                <input
                                                    type="email"
                                                    className="form-control form-control-lg"
                                                    id="email"
                                                    placeholder="Username"
                                                    onChange={formik.handleChange("email")}
                                                    value={formik.values.email}
                                                />

                                                <div className='error'>
                                                    {formik.touched.email && formik.errors.email ? (
                                                        <div>{formik.errors.email}</div>
                                                    ) : null}
                                                </div>

                                            </div>
                                            <div className="form-group">
                                                <input type="password"
                                                    className="form-control form-control-lg"
                                                    id="password"
                                                    placeholder=" Password "
                                                    onChange={formik.handleChange}
                                                    value={formik.values.password}
                                                />
                                                <div className='error'>
                                                    {formik.touched.password && formik.errors.password ? (
                                                        <div>{formik.errors.password}</div>
                                                    ) : null}
                                                </div>

                                            </div>

                                            <div className="mt-3">
                                                <button type="submit" className="btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn">SIGN IN</button>
                                            </div>
                                            <div className="my-2 d-flex justify-content-between align-items-center">
                                                {/* <div className="form-check">
                                                    <label className="form-check-label text-muted">
                                                        <input
                                                            type="checkbox"
                                                            className="form-check-input"
                                                        />

                                                        Keep me signed in
                                                    </label>
                                                </div> */}
                                                <a href="#" className="auth-link text-black">Forgot password?</a>
                                            </div>
                                            <div className="mb-2">
                                                {/* <button type="button" className="btn btn-block btn-facebook auth-form-btn">
                                                    <i className="ti-facebook mr-2"></i>Connect using facebook
                                                </button> */}
                                            </div>
                                            <div className="text-center mt-4 font-weight-light">
                                                Don't have an account? <a href="signup" className="text-primary">Create</a>
                                            </div>
                                            <div className='error'>
                                                {/* {message.message === "rejected" ? "you are not an admin" : ""} */}
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>

            </main>
        </>
    )
}

